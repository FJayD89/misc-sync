RevEngi_stuff


void * xorencrypt(long FLAG,int is_0x11,long macAddr,int addrLen)

{
	void *out;
	int i;
	
	out = calloc((long)(is_0x11 + 1),1);
	for (i = 0; i < is_0x11; i = i + 1) {
		*(byte *)((long)out + (long)i) = *(byte *)(FLAG + i) ^ *(byte *)(macAddr + i % addrLen);
	}
	return out;
}
	

undefined8 getFlag(void)

{
	int iVar1;
	char *macAddr;
	undefined8 encryptedFlag;
	size_t addrLen;
	
	macAddr = (char *)getMac();
	if (macAddr == (char *)0x0) {
		encryptedFlag = 0;
	}
	else {
	iVar1 = strcmp(macAddr,"de:ad:be:ef:fa:ce");
		if ((iVar1 == 0) && (user_seed != '\0')) {
			puts("You win!");
		}
		printf("Mac Address: %s\n",macAddr);
		addrLen = strlen(macAddr);
		encryptedFlag = xorencrypt(FLAG,0x11,macAddr,addrLen & 0xffffffff);
		free(macAddr);
	}
	return encryptedFlag;
}


char * generateSentence(void)

{
	char cVar1;
	int iVar2;
	char *__dest;
	char *encryptedFlag;
	undefined8 *puVar3;
	ulong uVar4;
	byte is_0;
	
	is_0 = 0;
	__dest = (char *)calloc(0xc9,1);
	iVar2 = rand();
	strcat(__dest,*(char **)(ARTICLES + (long)(iVar2 % 6) * 8));
	uVar4 = 0xffffffffffffffff;
	encryptedFlag = __dest;
	do {
		if (uVar4 == 0) break;
		uVar4 = uVar4 - 1;
		cVar1 = *encryptedFlag;
		encryptedFlag = encryptedFlag + (ulong)is_0 * -2 + 1;
	} while (cVar1 != '\0');
	*(undefined2 *)(__dest + (~uVar4 - 1)) = 0x20;
	iVar2 = rand();
	strcat(__dest,*(char **)(NOUNS + (long)(iVar2 % 0x65) * 8));
	uVar4 = 0xffffffffffffffff;
	encryptedFlag = __dest;
	do {
		if (uVar4 == 0) break;
		uVar4 = uVar4 - 1;
		cVar1 = *encryptedFlag;
		encryptedFlag = encryptedFlag + (ulong)is_0 * -2 + 1;
	} while (cVar1 != '\0');
	*(undefined2 *)(__dest + (~uVar4 - 1)) = 0x20;
	iVar2 = rand();
	strcat(__dest,*(char **)(VERBS + (long)(iVar2 % 0x65) * 8));
	iVar2 = strcmp(__dest,"the flag is");
	if ((iVar2 == 0) && ((search != '\0' || (user_seed != '\0')))) {
		uVar4 = 0xffffffffffffffff;
		encryptedFlag = __dest;
		do {
			if (uVar4 == 0) break;
			uVar4 = uVar4 - 1;
			cVar1 = *encryptedFlag;
			encryptedFlag = encryptedFlag + (ulong)is_0 * -2 + 1;
		} while (cVar1 != '\0');
		*(undefined2 *)(__dest + (~uVar4 - 1)) = 0x20;
		encryptedFlag = (char *)getFlag();
		if (encryptedFlag == (char *)0x0) {
			uVar4 = 0xffffffffffffffff;
			encryptedFlag = __dest;
			do {
				if (uVar4 == 0) break;
				uVar4 = uVar4 - 1;
				cVar1 = *encryptedFlag;
				encryptedFlag = encryptedFlag + (ulong)is_0 * -2 + 1;
			} while (cVar1 != '\0');
			puVar3 = (undefined8 *)(__dest + (~uVar4 - 1));
			*puVar3 = 0x2065687420746f6e;
			*(undefined4 *)(puVar3 + 1) = 0x67616c66;
			*(undefined *)((long)puVar3 + 0xc) = 0;
		}
		else {
			strcat(__dest,encryptedFlag);
			free(encryptedFlag);
		}
		found = 1;
	}
	else {
		uVar4 = 0xffffffffffffffff;
		encryptedFlag = __dest;
		do {
			if (uVar4 == 0) break;
			uVar4 = uVar4 - 1;
			cVar1 = *encryptedFlag;
			encryptedFlag = encryptedFlag + (ulong)is_0 * -2 + 1;
		} while (cVar1 != '\0');
		*(undefined2 *)(__dest + (~uVar4 - 1)) = 0x20;
		iVar2 = rand();
		strcat(__dest,*(char **)(PREPOSITIONS + (long)(iVar2 % 7) * 8));
		uVar4 = 0xffffffffffffffff;
		encryptedFlag = __dest;
		do {
			if (uVar4 == 0) break;
			uVar4 = uVar4 - 1;
			cVar1 = *encryptedFlag;
			encryptedFlag = encryptedFlag + (ulong)is_0 * -2 + 1;
		} while (cVar1 != '\0');
		*(undefined2 *)(__dest + (~uVar4 - 1)) = 0x20;
		iVar2 = rand();
		strcat(__dest,*(char **)(PROPER_NOUNS + (long)(iVar2 % 0x2d) * 8));
	}
	iVar2 = toupper((int)*__dest);
	*__dest = (char)iVar2;
	return __dest;
}

