from math import sqrt, floor, ceil, factorial
from time import time
from itertools import permutations

# f = open('eulerText.txt')
# names = f.read()[1:-1].split('\",\"')

def isAPermutation(numStr):


def factors(num):
    if num in [2,3]:
        return [num]
    fList = []
    for i in range(2, floor(sqrt(num))+1):
        if num % i == 0:
            fList.append(i)
            break
        if i == floor(sqrt(num)):
            return [num]

    for factor in factors(num/fList[0]):
        if not factor in fList:
            fList.append(factor)
    return fList

def isPrime(num):
    for i in range(2, floor(sqrt(num))+1):
        if num % i == 0:
            return False
    return True

def conjecture(num):
    for i in range(2, floor(sqrt(num/2))+1):
        if isPrime(num - 2 * i**2):
            return True
    return False


mList = []
mSum = 0
largestP = 0
largestPList = 0

startTime = time()

a = 2
t = True
fCount = 4
count = 0
# 10405071317
digits = '000000000'

for i in range(1,1001):
    digits = str(int(digits)+i**i)[-10:]
print(digits)



print('This took', time()-startTime)